// Copyright 2017 Espressif Systems (Shanghai) PTE LTD
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
@COMMENT@

#include <string.h>
#if __has_include("soc/soc.h")
#include "soc/soc.h"
#endif
@HEADERS@

#ifdef CONFIG_MDF_ERR_TO_NAME_LOOKUP
#define ERR_TBL_IT(err)    {err, #err}

typedef struct {
    mdf_err_t code;
    const char *msg;
} mdf_err_msg_t;

static const mdf_err_msg_t mdf_err_msg_table[] = {
@ERROR_ITEMS@
};
#endif //CONFIG_MDF_ERR_TO_NAME_LOOKUP

static const char mdf_unknown_msg[] =
#ifdef CONFIG_MDF_ERR_TO_NAME_LOOKUP
    "ERROR";
#else
    "UNKNOWN ERROR";
#endif //CONFIG_MDF_ERR_TO_NAME_LOOKUP

const char *mdf_err_to_name(mdf_err_t code)
{
    if (code > 0 && code < 0x100) {
        return strerror(code);
    } else if (code < 0x100000 && code != ESP_OK && code != ESP_FAIL) {
        return esp_err_to_name(code);
    }

#ifdef CONFIG_MDF_ERR_TO_NAME_LOOKUP
    int i;

    for (i = 0; i < sizeof(mdf_err_msg_table) / sizeof(mdf_err_msg_table[0]); ++i) {
        if (mdf_err_msg_table[i].code == code) {
            return mdf_err_msg_table[i].msg;
        }
    }
#endif //CONFIG_MDF_ERR_TO_NAME_LOOKUP

    return mdf_unknown_msg;
}
